"""
Django settings for comms project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from datetime import timedelta
from rest_framework import permissions

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

from django.conf import settings
# import dj_database_url


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-!-4&+j$v25vk$dss&2+30+qq*w4ixs7_5=(p6#(k_k!0+#u!kj'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["127.0.0.1", "localhost", ".vercel.app", "now.sh", '*', 'ht-marketplace-hackathon-team-a-2.onrender.com']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'drf_yasg',
    'rest_framework_simplejwt',
    'social_django',
    'channels',
    'comms'
]

SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        }
    }
}

CORS_ORIGIN_WHITELIST = [
    'http://localhost:4200',
    # ''
]


MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'whitenoise.middleware.WhiteNoiseMiddleware',
    
]

AUTHENTICATION_BACKENDS = [
    'social_core.backends.facebook.FacebookOAuth2',
    'social_core.backends.instagram.InstagramOAuth2',
    'social_core.backends.twitter.TwitterOAuth',
    'django.contrib.auth.backends.ModelBackend',  # Default backend
]


# TXNFSURKazFOS0hKUnlGa1laYms6MTpjaQ - client id
# nMUA0EtLml-wtZJsFCCLuRF1FAuwlrRhxWvMHCoW0jEI-tjUTh - client secret
SOCIAL_AUTH_CONFIGS = {
    'TWITTER': {
        'API_KEY': 'PiOCTKTj5zkbNEPa1zx2l1HoR',
        'API_SECRET': 'U6NhnVe1oSFzj3Q0kY4WtCsnzM1IoH4svTRGczdzSR0CWGdjAn',
    },
    'INSTAGRAM': {
        'CLIENT_ID': 'your-instagram-client-id',
        'CLIENT_SECRET': 'your-instagram-client-secret',
    },
    'FACEBOOK': {
        'APP_ID': 'your-facebook-app-id',
        'APP_SECRET': 'your-facebook-app-secret',
    }
}


ROOT_URLCONF = 'comms.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI_APPLICATION = 'comms.wsgi.application'

ASGI_APPLICATION = 'comms.asgi.application'
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)],
        },
    },
}

# Set session to expire after the user closes the browser
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# Optionally, set the session timeout duration (in seconds)
SESSION_COOKIE_AGE = 3600  # 1 hour
# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases


# local database configs
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'HelloTractorECommerce',
#         'USER': 'root', 
#         'PASSWORD': "root",
#         'HOST': '127.0.0.1',   # 127.0.0.1
#         'PORT': '3306',     # 3306
#     }
# }

# railway db config
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'HelloTractorECommerce',
#         'USER': 'davie', 
#         'PASSWORD': "3W8uSx8!Bt9cdg3",
#         'HOST': 'SG-HelloTractorECommerce-11038-mysql-master.servers.mongodirector.com', 
#         'PORT': '3306',     
#         # 'hello': ''
#     }
# }


# gcp
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'HelloTractorECommerce',
#         'USER': 'root', 
#         'PASSWORD': "mQ_8Q(>X`(^T&SK}",
#         'HOST': '/cloudsql/chatbot-1b12b:us-central1-f:htdb1', 
#         # 'PORT': '3306',     
#     }
# }

# print(settings.DATABASES, 'prrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr')

# Email configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # Your SMTP server address
EMAIL_PORT = 587  # Typically 587 for TLS, 465 for SSL
EMAIL_USE_TLS = True  # Use TLS if the SMTP server requires it
EMAIL_USE_SSL = False  # Set to True if you use SSL
EMAIL_HOST_USER = 'ongoradavid5@gmail.com'  # Your email address
EMAIL_HOST_PASSWORD = 'vapbexbbmyqfumdr '  # Your email password
DEFAULT_FROM_EMAIL = 'ongoradavid5@gmail.com'  # Default sender address


WEBPUSH_SETTINGS = {
    "VAPID_PUBLIC_KEY": "BLddh6AzFLRWZgNqJRYpsCeDlH4NdaASMAU39iLcPb7K4BSGVbBfHd-3n2M_PVt-uKhQEy_UQSOLa-PrnlgUw4s",  
    "VAPID_PRIVATE_KEY": "20lHoKRy0HCW5a3VczrcSRm8cvTG8088Gp39WZRcbhg", 
    "VAPID_ADMIN_EMAIL": "ongoradavid5@gmail.com",  
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# if not DEBUG:
#     # Tell Django to copy static assets into a path called `staticfiles` (this is specific to Render)
#     STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
#     # Enable the WhiteNoise storage backend, which compresses static files to reduce disk use
#     # and renames the files with unique names for each version to support long-term caching
#     STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
    
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
